#include<stdio.h>
#include<string.h> // for strlen

int top = -1, stack[100];

void push(int n);
int pop();
int eval(char ch, int op1, int op2);

void main() {
    char a[50], ch;
    int i, op1, op2, res, x;

    printf("Enter a postfix expression: ");
    fgets(a, sizeof(a), stdin); 
    a[strcspn(a, "\n")] = '\0'; 
    for(i = 0; a[i] != '\0'; i++) {
        ch = a[i];

        
        if(ch >= '0' && ch <= '9') {
            push(ch - '0'); 
        } else {
            
            op2 = pop();
            op1 = pop();
            res = eval(ch, op1, op2);
            push(res);
        }
    }

    
    x = pop();
    printf("Evaluated value = %d\n", x);
}

void push(int n) {
    if(top < 99) {
        top++;
        stack[top] = n;
    } else {
        printf("Stack Overflow\n");
    }
}

int pop() {
    if(top == -1) { 
        printf("Stack Underflow\n");
        return -1;
    } else {
        int res = stack[top];
        top--;
        return res;
    }
}

int eval(char ch, int op1, int op2) {
    switch(ch) {
        case '+': return (op1 + op2);
        case '-': return (op1 - op2);
        case '*': return (op1 * op2);sS
        case '/': 
            if(op2 != 0) {
                return (op1 / op2);
            } else {
                printf("Error: Division by zero\n");
                return 0; 
            }
        default: 
            printf("Error: Invalid operator\n");
            return 0;
    }
}
